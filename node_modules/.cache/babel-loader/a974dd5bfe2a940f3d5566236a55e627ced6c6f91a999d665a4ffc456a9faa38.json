{"ast":null,"code":"var _jsxFileName = \"C:\\\\CVDS\\\\loginProyect\\\\CVDS-4-FRONT\\\\src\\\\components\\\\TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CreateTask from \"./CreateTask\";\nimport TaskList from \"./TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = \"http://localhost:8080/tasks\"; // Adjust the URL if necessary\n\nfunction TaskManager({\n  token\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks when the component mounts\n  useEffect(() => {\n    if (token) {\n      fetchTasks();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token]);\n\n  // Function to fetch tasks by user\n  const fetchTasks = async () => {\n    const response = await fetch(`${apiUrl}/GAT/${token.idUser}`);\n    const data = await response.json();\n    setTasks(data);\n  };\n\n  // Function to create a new task\n  const createTask = async newTask => {\n    newTask.idUser = token.idUser; // Add idUser to the task\n    const response = await fetch(`${apiUrl}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTask)\n    });\n    if (response.ok) fetchTasks();\n  };\n\n  // Function to update a task\n  const updateTask = async task => {\n    await fetch(`${apiUrl}/${task.idTarea}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    fetchTasks();\n  };\n\n  // Function to delete a task\n  const deleteTask = async id => {\n    await fetch(`${apiUrl}/${id}`, {\n      method: \"DELETE\"\n    });\n    fetchTasks();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"task-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Administrador de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTask, {\n      createTask: createTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      updateTask: updateTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskManager, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useEffect","useState","CreateTask","TaskList","jsxDEV","_jsxDEV","apiUrl","TaskManager","token","_s","tasks","setTasks","fetchTasks","response","fetch","idUser","data","json","createTask","newTask","method","headers","body","JSON","stringify","ok","updateTask","task","idTarea","deleteTask","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/CVDS/loginProyect/CVDS-4-FRONT/src/components/TaskManager.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nconst apiUrl = \"http://localhost:8080/tasks\"; // Adjust the URL if necessary\r\n\r\nfunction TaskManager({ token }) {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Fetch tasks when the component mounts\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchTasks();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [token]);\r\n\r\n  // Function to fetch tasks by user\r\n  const fetchTasks = async () => {\r\n    const response = await fetch(`${apiUrl}/GAT/${token.idUser}`);\r\n    const data = await response.json();\r\n    setTasks(data);\r\n  };\r\n\r\n  // Function to create a new task\r\n  const createTask = async (newTask) => {\r\n    newTask.idUser = token.idUser; // Add idUser to the task\r\n    const response = await fetch(`${apiUrl}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newTask),\r\n    });\r\n    if (response.ok) fetchTasks();\r\n  };\r\n\r\n  // Function to update a task\r\n  const updateTask = async (task) => {\r\n    await fetch(`${apiUrl}/${task.idTarea}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(task),\r\n    });\r\n    fetchTasks();\r\n  };\r\n\r\n  // Function to delete a task\r\n  const deleteTask = async (id) => {\r\n    await fetch(`${apiUrl}/${id}`, { method: \"DELETE\" });\r\n    fetchTasks();\r\n  };\r\n\r\n  return (\r\n    <section className=\"task-manager\">\r\n      <h2>Administrador de Tareas</h2>\r\n      <CreateTask createTask={createTask} /> {/* Pass createTask here */}\r\n      <TaskList tasks={tasks} updateTask={updateTask} deleteTask={deleteTask} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TaskManager;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAG,6BAA6B,CAAC,CAAC;;AAE9C,SAASC,WAAWA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK,EAAE;MACTI,UAAU,CAAC,CAAC;IACd;IACA;EACF,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,MAAM,QAAQE,KAAK,CAACO,MAAM,EAAE,CAAC;IAC7D,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClCN,QAAQ,CAACK,IAAI,CAAC;EAChB,CAAC;;EAED;EACA,MAAME,UAAU,GAAG,MAAOC,OAAO,IAAK;IACpCA,OAAO,CAACJ,MAAM,GAAGP,KAAK,CAACO,MAAM,CAAC,CAAC;IAC/B,MAAMF,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,MAAM,EAAE,EAAE;MACxCc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC;IACF,IAAIN,QAAQ,CAACY,EAAE,EAAEb,UAAU,CAAC,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMc,UAAU,GAAG,MAAOC,IAAI,IAAK;IACjC,MAAMb,KAAK,CAAC,GAAGR,MAAM,IAAIqB,IAAI,CAACC,OAAO,EAAE,EAAE;MACvCR,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,IAAI;IAC3B,CAAC,CAAC;IACFf,UAAU,CAAC,CAAC;EACd,CAAC;;EAED;EACA,MAAMiB,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMhB,KAAK,CAAC,GAAGR,MAAM,IAAIwB,EAAE,EAAE,EAAE;MAAEV,MAAM,EAAE;IAAS,CAAC,CAAC;IACpDR,UAAU,CAAC,CAAC;EACd,CAAC;EAED,oBACEP,OAAA;IAAS0B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC/B3B,OAAA;MAAA2B,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC/B,OAAA,CAACH,UAAU;MAACgB,UAAU,EAAEA;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACvC/B,OAAA,CAACF,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACgB,UAAU,EAAEA,UAAW;MAACG,UAAU,EAAEA;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEd;AAAC3B,EAAA,CAtDQF,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAwDpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}